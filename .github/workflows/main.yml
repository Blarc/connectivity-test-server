name: Build and Deploy to GKE

on:
  push:
    workflow_dispatch:
    paths:
      - server/**
      - .github/workflows/**
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: connectivity-test-server
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster
  GKE_REGION: europe-west1

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.7
      - name: Build
        run: cd server && go build -v
      - name: Test
        run: cd server && go test -json | tee test-results.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: server/test-results.json
      # Setup gcloud CLI
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}
      - name: "Log in to Google Cloud Container registry"
        run: |-
          gcloud auth configure-docker ${{ env.GKE_REGION }}-docker.pkg.dev --quiet
      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: server
          push: true
          tags: |
            "${{ env.REGISTRY }}/blarc/${{ env.IMAGE_NAME }}:${{ github.sha }}"
            "${{ env.REGISTRY }}/blarc/${{ env.IMAGE_NAME }}:latest"
            "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cts-registry/${{ env.IMAGE_NAME }}:${{ github.sha }}"
            "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cts-registry/${{ env.IMAGE_NAME }}:latest"
          file: server/Dockerfile
      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v5.5.0/kustomize_v5.5.0_linux_amd64.tar.gz
          tar -xzf kustomize.tar.gz
          chmod u+x kustomize
          mv kustomize /usr/local/bin
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          cd server/k8s
          kustomize edit set image "${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cts-registry/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          kustomize build . | kubectl apply -f -
          kubectl rollout status "deployment/$(yq e 'select(.kind == "Deployment") | .metadata.name' deployment.yaml)"
          kubectl get services -o wide
