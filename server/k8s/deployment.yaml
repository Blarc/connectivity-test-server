apiVersion: apps/v1
kind: Deployment
metadata:
  name: connectivity-test-server
  namespace: connectivity-test-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: connectivity-test-server
  template:
    metadata:
      labels:
        app: connectivity-test-server
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # Preferred anti-affinity for cross-zone distribution
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - connectivity-test-server
                topologyKey: "topology.kubernetes.io/zone"
            # Preferred anti-affinity for node-level distribution within zones
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - connectivity-test-server
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: connectivity-test-server
          image: ghcr.io/blarc/connectivity-test-server:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            # GKE Autopilot adjusts these because they are bellow minimum
            # https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-resource-requests#min-max-requests
            requests:
              cpu: "10m"
              memory: "16Mi"
            limits:
              cpu: "20m"
              memory: "32Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: connectivity-test-server
  namespace: connectivity-test-server
spec:
  selector:
    app: connectivity-test-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
